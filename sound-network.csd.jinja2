<CsoundSynthesizer>
<CsOptions>
;-L stdin -odac           -iadc     -dm6    ;;;RT audio I/O
 -L stdin -odac           -iadc     -dm6  -+rtaudio=jack -+jack_client=csoundGrain  -b 1024 -B 2048   ;;;RT audio I/O
; For Non-realtime ouput leave only the line below:
; -o grain3.wav -W ;;; for file output any platform
</CsOptions>
<CsInstruments>

sr	=  44100
;kr      =  100
ksmps   =  16
nchnls	=  2
0dbfs = 1

;;;#define SIZE #268435456#
#define SIZE #4194304#

;;; how many inputs on layer 1?
   {% for i in range(0,our_layers[0]) %}
     gai{{i + 1}} init 0
   {% endfor %}


{% for layer in neuron_layers %}
   {% for neuron in layer %}
      {% for e in neuron["inputs"] %} \
      gkw{{e["layer"]}}_{{e["from"]}}_{{e["to"]}} init 0
      {% endfor %}
   {% endfor %}
{% endfor %}

   {% for neuron in neuron_layers[-1] %}
         gao{{neuron["layer"]}}_{{neuron["to"]}} init 0
   {% endfor %}



/* f#  time  size  1  filcod  skiptime  format  channel */


giEXP = -1
giLINEAR = 0

FLcolor	180,200,199
;;;
;;;     [1] [2] [X] [Y]
;;;    /\/\/\/\/\/\/\/\
;;;  [ ] [ ] [ ] [ ] [ ]
;;;     \/\/\/\/\/\/\/
;;;    [ ] [ ] [ ] [ ]
;;;      \/\/\/\/\/
;;;       [1] [2]
;;; 4 inputs
;;; layer 1
;;; w1_1


FLpanel "Network",500,500
        imin = 0
        imax = 1
        islw = 500
        islh = 15
        itype = 5
        ioff = islh
{% for layer in layers %}
   {% for e in layer %}
    gkw{{e["layer"]}}_{{e["from"]}}_{{e["to"]}}, iww{{e["layer"]}}_{{e["from"]}}_{{e["to"]}} FLslider "{{e["layer"]}}_{{e["from"]}}_{{e["to"]}}", imin, imax, 0, itype, -1, islw, islh, 0, ioff*({{ e["n"] + e["layer"] }})
   {% endfor %}
   ihandle FLbox "@line", 1, 1, 1, islw, 5, 0, ioff*{{layer[-1]["n"]}}
{% endfor %}
FLpanel_end	;***** end of container

FLrun		;***** runs the widget thread 

instr 1
endin

instr 100
   gai1, gai2 ins

   {% for i in range(0,our_layers[0]) %}
      ao0_{{i}} = gai{{i + 1}}
   {% endfor %}


{% for layer in neuron_layers %}
   {% for neuron in layer %}
      ao{{neuron["layer"]}}_{{neuron["to"]}} = \
      {% for e in neuron["inputs"] %} \
      gkw{{e["layer"]}}_{{e["from"]}}_{{e["to"]}}*ao{{e["layer"]-1}}_{{e["from"]}} {{ "+" if not loop.last }} \
      {% endfor %}
   {% endfor %}
{% endfor %}

   {% for neuron in neuron_layers[-1] %}
         gao{{neuron["layer"]}}_{{neuron["to"]}} = ao{{neuron["layer"]}}_{{neuron["to"]}}
   {% endfor %}

   ao1 clip ao{{neuron_layers[-1][0]["layer"]}}_0, 2, 1
   ao2 clip ao{{neuron_layers[-1][0]["layer"]}}_1, 2, 1    
   outs ao1, ao2
   gai3 = ao1
   gai4 = ao2


endin

</CsInstruments>
<CsScore>
t 0 60

f 0 3600

i 100 0 3600

e
</CsScore>
</CsoundSynthesizer>
